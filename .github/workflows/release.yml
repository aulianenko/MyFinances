name: Release Build

on:
  release:
    types: [created, published]
  workflow_dispatch:
    inputs:
      version_name:
        description: 'Version name (e.g., 1.0.0)'
        required: true
        default: '1.0.0'

jobs:
  release:
    name: Build Release APK/AAB
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v4
        with:
          java-version: '17'
          distribution: 'temurin'
          cache: gradle

      - name: Grant execute permission for gradlew
        run: chmod +x gradlew

      - name: Decode keystore
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        run: |
          echo "${{ secrets.KEYSTORE_BASE64 }}" | base64 -d > app/release.keystore

      - name: Create keystore.properties
        if: ${{ secrets.KEYSTORE_BASE64 != '' }}
        run: |
          echo "storeFile=release.keystore" > keystore.properties
          echo "storePassword=${{ secrets.KEYSTORE_PASSWORD }}" >> keystore.properties
          echo "keyAlias=${{ secrets.KEY_ALIAS }}" >> keystore.properties
          echo "keyPassword=${{ secrets.KEY_PASSWORD }}" >> keystore.properties

      - name: Run tests
        run: ./gradlew testReleaseUnitTest

      - name: Build release APK
        run: ./gradlew assembleRelease

      - name: Build release AAB
        run: ./gradlew bundleRelease

      - name: Get version name
        id: version
        run: |
          if [ "${{ github.event_name }}" == "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version_name }}" >> $GITHUB_OUTPUT
          else
            echo "version=${{ github.event.release.tag_name }}" >> $GITHUB_OUTPUT
          fi

      - name: Upload release APK
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ steps.version.outputs.version }}-apk
          path: app/build/outputs/apk/release/app-release.apk
          retention-days: 90

      - name: Upload release AAB
        uses: actions/upload-artifact@v4
        with:
          name: app-release-${{ steps.version.outputs.version }}-aab
          path: app/build/outputs/bundle/release/app-release.aab
          retention-days: 90

      - name: Upload APK to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: app/build/outputs/apk/release/app-release.apk
          asset_name: MyFinances-${{ steps.version.outputs.version }}.apk
          asset_content_type: application/vnd.android.package-archive

      - name: Upload AAB to release
        if: github.event_name == 'release'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ github.event.release.upload_url }}
          asset_path: app/build/outputs/bundle/release/app-release.aab
          asset_name: MyFinances-${{ steps.version.outputs.version }}.aab
          asset_content_type: application/octet-stream

      - name: Clean up keystore
        if: always()
        run: |
          rm -f app/release.keystore
          rm -f keystore.properties
